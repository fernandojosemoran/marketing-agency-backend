services:
  nginx:
    container_name: nginx-container
    image: nginx:latest
    build:
      context: .
      dockerfile: dockerfile.nginx
    networks:
      - marketingAgency
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - next-web
      - backend-django

  next-web:
    container_name: web-container
    networks:
      - marketingAgency
    build:
      context: .
      dockerfile: dockerfile.web
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./marketing-agency:/code
    environment:
      - PORT=3000
    depends_on:
      - backend-django

  backend-django:
    container_name: django-container
    networks:
      - marketingAgency
    build:
      context: .
      dockerfile: dockerfile.django
    ports:
      - "${BACKEND_PORT:-8000}:5000"
    volumes:
      - ./backend:/code
    environment:
      - SECRET_KEY=$SECRET_KEY
      - DEBUG=$DEBUG
      - DATABASE_URL=$DATABASE_URL
      - POSTGRES_DB=$POSTGRES_DB
      - BACKEND_PORT=$BACKEND_PORT
      - ALLOWED_HOSTS_DEV=$ALLOWED_HOSTS_DEV
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_HOST=$POSTGRES_HOST
      - CSRF_TRUSTED_ORIGINS_DEV=$CSRF_TRUSTED_ORIGINS_DEV
    depends_on:
      - postgres-database

  postgres-database:
    container_name: postgres-container
    image: postgres:latest
    networks:
      - marketingAgency
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:


networks:
  marketingAgency:
    driver: bridge
